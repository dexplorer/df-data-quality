[build-system]
requires = ["setuptools >= 64.0"]
build-backend = "setuptools.build_meta"

[project]
name = "dq_app"
version = "0.0.1"
authors = [
  { name="Rajakumaran Arivumani", email="author@example.com" },
]
description = "Data quality app package"
readme = "README.md"
requires-python = ">=3.12"
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
]
#license = "MIT"
#license-files = ["LICEN[CS]E*"]
dependencies = [
  # app specific 
  #"great-expectations == 1.3.14",
  "great-expectations == 1.4.2",
  "pyspark == 3.5.4",
  "python-dotenv", 
]
keywords = ["data", "quality", "etl", "elt", "framework", "governance"]

[project.optional-dependencies]
my-packages-local = [
  # my packages (installed locally)
  "utils[spark]",
  "utils[aws]",
  "metadata",
  "app_calendar",
  "config",
]
my-packages-container = [
  # my packages (source in container)
  "utils[spark] @ file:///packages/utils",
  "utils[aws] @ file:///packages/utils",
  "metadata @ file:///packages/df-metadata",
  "app_calendar @ file:///packages/df-app-calendar",
  "config @ file:///packages/df-config",
]
api = [
  "fastapi" , 
  "uvicorn[standard]", 
  ]
cli = [
  "click",
]
test = [
  # standard dev tools
  "pytest",
  "pytest-cov",
  "pylint",
  "black",
  "ipython",
]
all-dev = [
  "dq_app[my-packages-local, cli, api, test]"
  ]
all = [
  "dq_app[my-packages-container, cli, api]"
  ]

[project.scripts]
dq-app-cli = "dq_app.dq_app_cli:main"
dq-app-api = "dq_app.dq_app_api:main"

[project.urls]
Homepage = "https://profile.rajakumaran.in"
Documentation = "https://readthedocs.org"
Repository = "https://github.com/dexplorer/df-data-quality.git"
Issues = "https://github.com/dexplorer/df-data-quality/issues"
Changelog = "https://github.com/dexplorer/df-data-quality/blob/master/CHANGELOG.md"
